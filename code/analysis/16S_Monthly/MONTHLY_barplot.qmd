---
title: "16S_daily"
format:
  html:
    theme: default
---

# Getting Started:

#### Libraries

```{r, include=FALSE}
library(tidyverse)
library(here)
library(vegan)
library(viridis)
library(cowplot)
library(phyloseq)
library(pals)
```

#### Load Clean 16S data

```{r}
ps<- readRDS(file = here("data", "clean_data", "clean_16s_phyloseq_Monthly.rds"))
```

# Cleaning

#### Make Top### Dataframe

```{r}
N<- 400
```

```{r}
topN <- names(sort(taxa_sums(ps), decreasing=TRUE))[1:N] #Selects top N to look at
ps.topN <- transform_sample_counts(ps, function(OTU) OTU/sum(OTU))
ps.topN <- prune_taxa(topN, ps.topN)
```

#### Make into DF so we can manipulate

```{r}
data<- psmelt(ps.topN)
```

#### Make Date into chr so the bars can be stacked next to each other

```{r}
#Make Date a Character so the bars can be stacked next to each other
data<-
  data %>%
  mutate(Date = as.character(Date),
#Rename Sites
         Site = recode(Site, "BO" = "Blind Oso",
                             "C2" = "Canals",
                             "RD" = "Gulf"))
```

#### 

# Visualization

## Community Composition

https://www.rpubs.com/roalle/mres_2019

#### Stacked Barplot

[**Distinct Color Schemes**](https://stackoverflow.com/questions/9563711/r-color-palettes-for-many-data-classes)**:**

```{r, fig.width=12, fig.height=7}
data %>% 
    ggplot() + geom_bar(
  aes(x = Date,
      y = Abundance,
      fill = Order),
 # color = "black",
  stat = "identity") +
  facet_wrap(~Site, scales = "free_x")+
  scale_fill_manual(values = unname(glasbey()))+
  ggtitle( paste( "16S Monthly Top", N, "Taxa"))+
  theme_bw()+
  theme(axis.text.x = element_text(angle = 45, hjust = 1, face = "bold", size = 13),
        axis.title.x = element_blank(),
        plot.title = element_text(face = "bold", size = 20),
        strip.text.x = element_text(size = 15, face = "bold"))
```

##### Stacked Barplot: Look at just Borchardt

```{r}
vib<- data %>% 
  filter(Order %in% c("Vibrionales"),
         !Site %in% "gu") 

vib %>% ggplot() + geom_bar(
  aes(x = Date,
      y = Abundance,
      fill = Family),
  color = "black",
  stat = "identity") +
  facet_wrap(~Site, scales = "free_x")+
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1))
```

## 
